version: "3.9"

services:

  app:
    build:
      context: ./anomaly_isolation_forest
      dockerfile: Dockerfile
    container_name: anomaly-detection
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./anomaly_isolation_forest/app:/app/app
    depends_on:
      - redis
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - anomaly-network
  fastapi-app:
    build: ./anomaly-llm-faiss
    container_name: aiops-llm
    ports:
      - "8001:8001"
    command: uvicorn app.main:app --host 0.0.0.0 --port 8001 --reload

    volumes:
      - ./anomaly-llm-faiss/app:/app/app

    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CASE_MGT_URL=<case mgt url>
      - OPENSHIFT_API_SERVER=https://<openshift api url>:6443
      - OPENSHIFT_TOKEN=<token>
    networks:
      - anomaly-network


  redis:
    image: redis:7-alpine
    container_name: anomaly-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - anomaly-network

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    volumes:
      - ./otel/etc/otel-config.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - "4317:4317"  # OTLP gRPC
      - "4318:4318"  # OTLP HTTP
      - "55681:55681" # OpenCensus (optional)
    command:
      ["--config=/etc/otelcol-contrib/config.yaml"]
    networks:
      - anomaly-network

  otel-demo:
    build:
      context: ./otel-demo-app
      dockerfile: Dockerfile
    container_name: anomaly-demo
    ports:
      - "8002:8000"
    environment:
      - PYTHONPATH=/app
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317
      - OTEL_SERVICE_NAME=anomaly-detection
      - OTEL_EXPORTER_OTLP_PROTOCOL=gRPC/protobuf
    # volumes:
    #   - .:/app
    
    volumes:
      - ./otel-demo-app/app:/app/app
    depends_on:
      - redis
      - otel-collector
    # command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    command: bash -c "sleep 10 && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

    networks:
      - anomaly-network

volumes:
  redis_data:

networks:
  anomaly-network:
    driver: bridge
